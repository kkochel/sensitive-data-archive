services:
  certfixer:
    command:
      - /bin/sh
      - /scripts/make_certs.sh
    container_name: certfixer
    image: alpine:latest
    volumes:
      - ./scripts:/scripts
      - certs:/certs
      - client_certs:/client_certs
      - /tmp:/temp
  credentials:
    container_name: credentials
    command:
      - "/bin/sh"
      - "/scripts/make_db_credentials.sh"
    depends_on:
      postgres:
        condition: service_healthy
      postgres_tls:
        condition: service_healthy
    environment:
      - PGPASSWORD=rootpasswd
    image: ubuntu:jammy
    volumes:
      - ./scripts:/scripts

  migration_helper:
    container_name: helper
    command:
      - /usr/bin/tar
      - -zxf
      - /pgdata.tgz
      - -C
      - /pgdata/
    image: ubuntu:jammy
    user: 70:70
    volumes:
      - pgmigrate:/pgdata
      - ./tests/postgres/pgdata.tgz:/pgdata.tgz

  migrate:
    container_name: migrate
    depends_on:
      migration_helper:
        condition: service_completed_successfully
    environment:
      - POSTGRES_PASSWORD=rootpasswd
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 20s
      retries: 3
    image: ghcr.io/kkochel/sensitive-data-archive:PR${PR_NUMBER}-postgres
    ports:
      - "35432:5432"
    restart: always
    volumes:
      - pgmigrate:/var/lib/postgresql/data

  postgres:
    build:
      context: ../../postgresql
    container_name: db
    environment:
      - POSTGRES_PASSWORD=rootpasswd
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 20s
      retries: 3
    image: ghcr.io/kkochel/sensitive-data-archive:PR${PR_NUMBER}-postgres
    ports:
      - "15432:5432"
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data

  postgres_tls:
    container_name: tlsdb
    depends_on:
      certfixer:
        condition: service_completed_successfully
      postgres:
        condition: service_started
    environment:
      - POSTGRES_PASSWORD=rootpasswd
      - POSTGRES_SERVER_CACERT=/certs/ca.crt
      - POSTGRES_SERVER_CERT=/certs/db.crt
      - POSTGRES_SERVER_KEY=/certs/db.key
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 20s
      retries: 3
    image: ghcr.io/kkochel/sensitive-data-archive:PR${PR_NUMBER}-postgres
    ports:
      - "25432:5432"
    restart: always
    volumes:
      - certs:/certs
      - pgtlsdata:/var/lib/postgresql/data

  tests:
    container_name: tester
    command:
      - "/bin/sh"
      - "/tests/run_scripts.sh"
      - "/tests/postgres"
    depends_on:
      credentials:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      migrate:
        condition: service_healthy
    environment:
      - PGPASSWORD=rootpasswd
    image: ubuntu:jammy
    profiles:
      - tests
    volumes:
      - ./tests:/tests
      - client_certs:/certs
      - ../../postgresql/migratedb.d:/migratedb.d

volumes:
  certs:
  client_certs:
  pgdata:
  pgmigrate:
  pgtlsdata:
